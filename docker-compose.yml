version: '3.8'

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: student_data_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@db:5432/student_data_db
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=your-super-secret-key-change-this-in-production
      - ENVIRONMENT=development
      - DEBUG=true
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./uploads:/app/uploads
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  dashboard:
    build:
      context: .
      dockerfile: dashboards/Dockerfile
    ports:
      - "8050:8050"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/student_data_db
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./dashboards:/app/dashboards

volumes:
  postgres_data:
